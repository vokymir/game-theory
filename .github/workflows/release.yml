name: Build & Publish Desktop Binaries

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime:
          - win-x64
          - linux-x64
          - osx-x64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Publish for ${{ matrix.runtime }}
        run: |
          dotnet publish --configuration Release \
            --runtime ${{ matrix.runtime }} \
            --self-contained true \
            -o ./publish/${{ matrix.runtime }}

      - name: Zip ${{ matrix.runtime }} build
        run: |
          cd publish/${{ matrix.runtime }}
          zip -r ../../../${{ matrix.runtime }}-program.zip .

      - name: Upload artifact for ${{ matrix.runtime }}
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.runtime }}
          path: ${{ matrix.runtime }}-program.zip

  release:
    needs: build-and-publish
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime:
          - win-x64
          - linux-x64
          - osx-x64

    steps:
      - name: Download the specific runtime zip
        uses: actions/download-artifact@v4
        with:
          name: binaries-${{ matrix.runtime }}
          path: ./artifacts

      - name: Create GitHub Release
        if: matrix.runtime == 'win-x64'
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name:        ${{ github.ref_name }}           # release title = tag
          body:        Automated build for ${{ github.ref_name }} by ${{ github.actor }}.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release asset for ${{ matrix.runtime }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name:           ${{ github.ref_name }}
          asset_path:         ./artifacts/${{ matrix.runtime }}-program.zip
          asset_name:         ${{ matrix.runtime }}-program.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
